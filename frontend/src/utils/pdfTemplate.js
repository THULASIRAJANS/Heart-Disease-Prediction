// Backend PDF generation template structure (pseudocode)
function generatePDFReport(record) {
  // This is a simplified representation of the backend PDF generation logic
  
  const document = {
    pageSize: 'LETTER',
    pageMargins: [40, 60, 40, 60],
    header: {
      text: 'RetinaCare Diagnostic Report',
      alignment: 'center',
      fontSize: 16,
      bold: true,
      margin: [0, 10]
    },
    content: [
      // Logo and report identification
      {
        columns: [
          {
            image: 'assets/retinacare-logo.png',
            width: 100
          },
          {
            text: [
              { text: 'Report ID: ', bold: true }, record.id, '\n',
              { text: 'Date: ', bold: true }, new Date(record.date).toLocaleDateString(), '\n',
              { text: 'Time: ', bold: true }, new Date(record.date).toLocaleTimeString()
            ],
            alignment: 'right'
          }
        ],
        margin: [0, 0, 0, 20]
      },
      
      // Patient Information Section
      {
        text: 'Patient Information',
        style: 'sectionHeader'
      },
      {
        table: {
          widths: ['50%', '50%'],
          body: [
            [
              { text: 'Patient Name', style: 'tableHeader' },
              { text: record.patientName }
            ],
            [
              { text: 'Patient Age', style: 'tableHeader' },
              { text: record.age + ' years' }
            ],
            [
              { text: 'Attending Doctor', style: 'tableHeader' },
              { text: record.doctor }
            ]
          ]
        },
        margin: [0, 10, 0, 20]
      },
      
      // Diagnosis Results
      {
        text: 'Diagnosis Results',
        style: 'sectionHeader'
      },
      {
        table: {
          widths: ['30%', '70%'],
          body: [
            [
              { text: 'Condition', style: 'tableHeader' },
              { text: record.prediction, bold: record.prediction !== 'Normal' }
            ],
            [
              { text: 'Confidence', style: 'tableHeader' },
              { text: record.confidence }
            ],
            [
              { text: 'Analysis', style: 'tableHeader' },
              { text: getAnalysisText(record.prediction, record.confidence) }
            ]
          ]
        },
        margin: [0, 10, 0, 20]
      },
      
      // Images
      {
        text: 'Retinal Images',
        style: 'sectionHeader'
      },
      {
        columns: [
          {
            text: 'Original Image',
            alignment: 'center',
            bold: true,
            margin: [0, 0, 0, 5]
          },
          {
            text: 'Processed Image with Detection Regions',
            alignment: 'center',
            bold: true,
            margin: [0, 0, 0, 5]
          }
        ]
      },
      {
        columns: [
          {
            image: `${process.env.SERVER_URL}/${record.imagePath}`,
            width: 250
          },
          {
            image: `${process.env.SERVER_URL}/${record.imagePath.replace('uploads', 'processed')}`,
            width: 250
          }
        ],
        margin: [0, 5, 0, 20]
      },
      
      // Recommendations
      {
        text: 'Recommendations',
        style: 'sectionHeader'
      },
      {
        text: getRecommendations(record.prediction),
        margin: [0, 10, 0, 20]
      },
      
      // Disclaimer
      {
        text: 'Disclaimer',
        style: 'sectionHeader'
      },
      {
        text: 'This report was generated by the RetinaCare AI diagnostic system and is intended to assist healthcare professionals. It is not a substitute for professional medical advice, diagnosis, or treatment. Always seek the advice of your physician or other qualified health provider with any questions you may have regarding a medical condition.',
        style: 'disclaimer',
        margin: [0, 10, 0, 30]
      },
      
      // Signature
      {
        columns: [
          {
            width: '60%',
            text: ''
          },
          {
            width: '40%',
            stack: [
              { 
                text: '____________________________',
                alignment: 'center'
              },
              {
                text: record.doctor,
                alignment: 'center',
                margin: [0, 5, 0, 0]
              },
              {
                text: 'Signature',
                alignment: 'center',
                italics: true,
                fontSize: 10,
                margin: [0, 5, 0, 0]
              }
            ]
          }
        ]
      }
    ],
    styles: {
      sectionHeader: {
        fontSize: 14,
        bold: true,
        margin: [0, 10, 0, 10],
        decoration: 'underline'
      },
      tableHeader: {
        bold: true,
        fontSize: 12,
        color: 'black'
      },
      disclaimer: {
        fontSize: 8,
        italics: true,
        color: '#666666'
      }
    }
  };
  
  // Helper functions for the content
  function getAnalysisText(prediction, confidence) {
    const confidenceNum = parseFloat(confidence);
    switch (prediction) {
      case 'Normal':
        return 'No signs of retinal pathology detected. Regular screening is recommended.';
      case 'Diabetic Retinopathy':
        if (confidenceNum >= 90) return 'Severe diabetic retinopathy detected with potential risk of vision loss. Urgent follow-up required.';
        if (confidenceNum >= 75) return 'Moderate diabetic retinopathy with visible microaneurysms and hemorrhages.';
        return 'Early signs of diabetic retinopathy detected.';
      case 'Glaucoma':
        if (confidenceNum >= 90) return 'Advanced glaucoma with significant optic nerve damage detected.';
        if (confidenceNum >= 75) return 'Moderate glaucoma symptoms detected. Optic nerve shows signs of damage.';
        return 'Early signs of glaucoma detected.';
      case 'Cataract':
        if (confidenceNum >= 90) return 'Mature cataract with significant lens opacity.';
        if (confidenceNum >= 75) return 'Developing cataract with moderate lens opacity.';
        return 'Early stage cataract with minor lens opacity.';
      case 'AMD':
        if (confidenceNum >= 90) return 'Advanced AMD with significant macular damage detected.';
        if (confidenceNum >= 75) return 'Intermediate AMD with visible drusen.';
        return 'Early signs of AMD detected.';
      default:
        return 'Analysis not available.';
    }
  }
  
  function getRecommendations(prediction) {
    switch (prediction) {
      case 'Normal':
        return 'Continue regular eye check-ups. Recommend annual screening.';
      case 'Diabetic Retinopathy':
        return 'Immediate referral to an ophthalmologist specialized in diabetic retinopathy. Blood sugar management should be optimized. Follow-up examination in 1-3 months depending on severity.';
      case 'Glaucoma':
        return 'Referral to a glaucoma specialist. Intraocular pressure measurement and visual field testing recommended. Consider topical medication to lower intraocular pressure.';
      case 'Cataract':
        return 'Referral to an ophthalmologist to discuss surgical options. Monitor progression with regular check-ups every 3-6 months.';
      case 'AMD':
        return 'Referral to a retina specialist. Consider AREDS supplements if appropriate. Self-monitoring with Amsler grid. Lifestyle modifications including smoking cessation and nutritional adjustments.';
      default:
        return 'Consult with an ophthalmologist for further evaluation.';
    }
  }
  
  // Return the document definition that the PDF library will render
  return document;
}